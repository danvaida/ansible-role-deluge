#!/bin/sh
{{ ansible_managed | comment }}
### BEGIN INIT INFO
# Provides:          deluge-web
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Should-Start:      $network
# Should-Stop:       $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Daemonized version of deluge webui.
# Description:       Starts the deluge webui daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="Deluge WebUI Daemon"
NAME="deluge-web"
USER="{{ deluge_user }}"
DAEMON=/usr/bin/deluge-web
DAEMON_ARGS="{{ deluge_web_daemon_args }}"
PIDFILE=/var/run/$NAME.pid
UMASK=022                     # Change this to 0 if running deluge-web as its own user
PKGNAME=deluge-web
SCRIPTNAME=/etc/init.d/$PKGNAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variables
[ -f /etc/default/rcS ] && . /etc/default/rcS

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
   # Return
   #   0 if daemon has been started
   #   1 if daemon was already running
   #   2 if daemon could not be started
   start-stop-daemon \
     --start \
     --background \
     --quiet \
     --pidfile $PIDFILE \
     --exec $DAEMON \
     --chuid $USER \
     --user $USER \
     --umask $UMASK \
     --test > /dev/null
   RETVAL="$?"
   [ "$RETVAL" = "0" ] || return 1

   start-stop-daemon \
     --start \
     --background \
     --pidfile $PIDFILE \
     --make-pidfile \
     --exec $DAEMON \
     --chuid $USER \
     --user $USER \
     --umask $UMASK \
     -- $DAEMON_ARGS
   RETVAL="$?"
   sleep 2
   [ "$RETVAL" = "0" ] || return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
   # Return
   #   0 if daemon has been stopped
   #   1 if daemon was already stopped
   #   2 if daemon could not be stopped
   #   other if a failure occurred

   start-stop-daemon \
     --stop \
     --retry=TERM/30/KILL/5 \
     --user $USER \
     --pidfile $PIDFILE
   RETVAL="$?"
   [ "$RETVAL" = "2" ] && return 2
   rm -f $PIDFILE
   [ "$RETVAL" = "0" ] && return 0 || return 1
}

case "$1" in
  start)
   [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
   do_start
   case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
   esac
   ;;
  stop)
   [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
   do_stop
   case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
   esac
   ;;
  restart|force-reload)
   log_daemon_msg "Restarting $DESC" "$NAME"
   do_stop
   case "$?" in
     0|1)
      do_start
      case "$?" in
         0) log_end_msg 0 ;;
         1) log_end_msg 1 ;; # Old process is still running
         *) log_end_msg 1 ;; # Failed to start
      esac
      ;;
     *)
        # Failed to stop
      log_end_msg 1
      ;;
   esac
   ;;
  *)
   echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
   exit 3
   ;;
esac

:
